{% extends 'basefront.html.twig' %}
{% block title %}<title>List of Libraries</title>{% endblock %}

{% block body %}
<div class="container-xxl py-5 bg-dark page-header mb-5">
    <div class="container my-5 pt-5 pb-4">
        <h1 class="display-3 text-white mb-3 animated slideInDown">Libraries</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb text-uppercase">
                <li class="breadcrumb-item"><a href="{{ path('app_front') }}">Home</a></li>
                <li class="breadcrumb-item"><a href="{{ path('app_biblio_index_front_recru') }}">Libraries</a></li>
                <li class="breadcrumb-item text-white active" aria-current="page">Show Libraries List</li>
            </ol>
        </nav>
    </div>
</div>

<div class="container mt-4">
    <h1 class="text-center mb-5 wow fadeInUp" data-wow-delay="0.1s">Library Listing</h1>
    <a href="{{ path('app_biblio_new_front') }}" class="btn btn-success float-end" style="margin-block-end: 20px;">Add new Library</a>

    <form method="get" action="{{ path('app_biblio_index_front_recru') }}" class="mb-3">
        <div class="input-group">
            <input type="text" name="nameSearch" class="form-control" placeholder="Search by Name...">
            <input type="text" name="fieldSearch" class="form-control" placeholder="Search by Field...">
            <input type="text" name="dateSearch" class="form-control" placeholder="Search by Date...">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </form> <br>

    <div class="" style="margin-left: 890px; margin-top: -15px; width: 147px;">
        <select class="form-select rounded-pill bg-danger text-light" name="sort" id="sortFilter">
            <option value="">Sort by Date </option>
            <option value="asc">Oldest to Newest</option>
            <option value="desc">Newest to Oldest</option>
        </select>
    </div>

    {% for biblio in biblios %}
        {% set img = biblio.imageB %}
        <a href="{{ path('app_biblio_show_front_recru', {'id': biblio.id}) }}">
            <div class="slide-container" data-date="{{ biblio.dateCreationB ? biblio.dateCreationB|date('Y-m-d') : '' }}">
                <div class="wrapper">
                    <div class="clash-card barbarian"><br>
                        <img style="width:70%;height:70%;border-radius: 14px ;" src="{{ asset(img)}}"><br>
                        <div class="clash-card__level clash-card__level--barbarian">{{ biblio.nomB }}</div>
                        <div class="clash-card__unit-description">{{ biblio.domaineB }}</div>
                        <div class="clash-card__unit-stats clash-card__unit-stats--barbarian clearfix">
                            <div class="">
                                <div class="stat-value">Date Creation</div>
                                <div class="stat">{{ biblio.dateCreationB ? biblio.dateCreationB|date('Y-m-d') : '' }}</div>
                            </div>
                        </div>
                    </div> <!-- end clash-card barbarian -->
                </div> <!-- end wrapper -->
            </div> <!-- end slide-container -->
        </a>
    {% else %}
        <tr>
            <h3 class="text-center" style="color: #a90909;"><strong>No Resources Yet</strong></h3>
        </tr>
    {% endfor %}

    <div class="pagination justify-content-center">
        {% do biblios.setPageRange(3) %}
        {{ knp_pagination_render(biblios, 'pagination.html.twig') }}
    </div>
    <br>
</div>
<script>
    function filterCards() {
        const sortFilter = document.getElementById('sortFilter').value;
        const cards = document.querySelectorAll('.slide-container');

        // Sort by date
        if (sortFilter !== '') {
            const sortedCards = Array.from(cards).sort((a, b) => {
                const dateA = new Date(a.getAttribute('data-date'));
                const dateB = new Date(b.getAttribute('data-date'));
                if (sortFilter === 'asc') {
                    return dateA - dateB;
                } else {
                    return dateB - dateA;
                }
            });

            const parent = cards[0].parentNode;
            parent.innerHTML = '';
            sortedCards.forEach(card => {
                parent.appendChild(card);
            });
        }
    }

    document.getElementById('sortFilter').addEventListener('change', filterCards);
</script>

{% endblock %}
